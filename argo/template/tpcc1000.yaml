apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: naglfar-tpcc1000-importer-
spec:
  entrypoint: tipocket-tpcc1000-importer
  arguments:
    parameters:
      - name: namespace # namespace
        default: naglfar-tpcc1000-importer
      - name: tag       # tag(different version uses different BRs), fill in: latest,tidb-4.0
        value: latest
      - name: test_cluster_name # cluster name import to
      - name: resource_request  # resource request name
      - name: workload_name     # workload node name
  templates:
    - name: tipocket-tpcc1000-importer
      resource:
        action: create
        successCondition: status.state = finish
        manifest: |
          apiVersion: naglfar.pingcap.com/v1
          kind: TestWorkload
          metadata:
            name: tpcc1000-importer
            namespace: {{workflow.parameters.namespace}}
          spec:
            clusterTopologies:
              - name: {{workflow.parameters.test_cluster_name}}
                aliasName: cluster
            workloads:
              - name: tpcc1000-importer
                dockerContainer:
                  resourceRequest:
                    name: {{workflow.parameters.resource_request}}
                    node: {{workflow.parameters.workload_name}}
                  image: "hub.pingcap.net/mahjonp/bench-toolset:{{workflow.parameters.tag}}"
                  imagePullPolicy: Always
                  command:
                    - /bin/sh
                    - -c
                    - |
                      set -ex
                      export AWS_ACCESS_KEY_ID=YOURACCESSKEY AWS_SECRET_ACCESS_KEY=YOURSECRETKEY
                      tidb=`echo $cluster_tidb0 | awk -F ":" '{print $1}'`
                      path="s3://mybucket/tpcc-1000-new"
                      if [ "{{workflow.parameters.tag}}" = "tidb-4.0" ]; then
                        path="s3://mybucket/tpcc-1000-4.0"
                      fi
                      br restore full --pd=$cluster_pd0 \
                              --storage=$path \
                              --s3.endpoint=http://172.16.4.4:30812 \
                              --send-credentials-to-tikv=true