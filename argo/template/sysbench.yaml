apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: naglfar-sysbench-importer-
spec:
  entrypoint: starter
  onExit: delete-ns
  arguments:
    parameters:
      - name: oltp_method
        value: oltp_point_select #oltp_index_update, oltp_non_index_update
      - name: baseline-release
        value: v3.0.19
      - name: baseline-tidb-url
        value: ""
      - name: baseline-tikv-url
        value: ""
      - name: baseline-pd-url
        value: ""
      - name: release
        value: v3.0.19
      - name: tidb-url
        value: ""
      - name: tikv-url
        value: ""
      - name: pd-url
        value: ""
  templates:
    - name: starter
      dag:
        tasks:
        - name: create-ns
          template: create-ns
        - name: request-cluster
          template: request-cluster
          dependencies: [create-ns]
        - name: create-cluster
          template: create-cluster
          dependencies: [request-cluster]
          arguments:
            parameters: [{name: release-branch, value: "{{workflow.parameters.release}}"},
                         {name: tidb-url, value: "{{workflow.parameters.tidb-url}}"},
                         {name: tikv-url, value: "{{workflow.parameters.tikv-url}}"},
                         {name: pd-url, value: "{{workflow.parameters.pd-url}}"}]
        - name: importer-logs-1
          template: importer-logs
          dependencies: [create-cluster]
        - name: benching-logs-1
          template: benching-logs
          dependencies: [importer-logs-1]
        - name: uninstall-cluster
          template: uninstall-cluster
          dependencies: [benching-logs-1]
        - name: create-cluster-baseline
          template: create-cluster
          dependencies: [uninstall-cluster]
          arguments:
            parameters: [{name: release-branch, value: "{{workflow.parameters.baseline-release}}"},
                         {name: tidb-url, value: "{{workflow.parameters.baseline-tidb-url}}"},
                         {name: tikv-url, value: "{{workflow.parameters.baseline-tikv-url}}"},
                         {name: pd-url, value: "{{workflow.parameters.baseline-pd-url}}"}]
        - name: importer-logs-2
          template: importer-logs
          dependencies: [create-cluster-baseline]
        - name: benching-logs-2
          template: benching-logs
          dependencies: [importer-logs-2]
    - name: importer-logs
      dag:
        tasks:
          - name: importing
            template: importing
          - name: importing-logs
            template: logs
            arguments:
              parameters: [{name: workload_name, value: "sysbench-importing"}]
          - name: importing-deletion
            template: workload-deletion
            dependencies: [importing, importing-logs]
            arguments:
              parameters: [{name: workload_name, value: "sysbench-importing"}]
    - name: benching-logs
      dag:
        tasks:
          - name: benching
            template: benching
          - name: benching-logs
            template: logs
            arguments:
              parameters: [{name: workload_name, value: "sysbench-benching"}]
          - name: importing-deletion
            template: workload-deletion
            dependencies: [benching, benching-logs]
            arguments:
              parameters: [{name: workload_name, value: "sysbench-benching"}]
    - name: logs
      inputs:
        parameters:
          - name: workload_name
      container:
        name: logs
        image: 'argoproj/argoexec:latest'
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - '-c'
          - |
            while true
            do
                state=`kubectl get tw {{inputs.parameters.workload_name}} -n {{workflow.name}} -ojsonpath='{.status.state}' || echo pending`
                if [ "running" = "$state" ]; then
                    break
                fi
                if [ "finish" = "$state" ]; then
                    break
                fi
                echo "workload isn't already now. Wait 10s..."
                sleep 10
            done
            curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/PingCAP-QE/Naglfar/master/scripts/kubectl-naglfar-installer.sh | sh
            export PATH=$PATH:/root/.Naglfar/bin
            naglfar logs {{inputs.parameters.workload_name}} -n {{workflow.name}} --follow
    - name: request-cluster
      resource:
        action: create
        successCondition: status.state = ready
        manifest: |
          apiVersion: naglfar.pingcap.com/v1
          kind: TestResourceRequest
          metadata:
            name: tidb-cluster
            namespace: {{workflow.name}}
          spec:
            machines:
              - name: m1
                exclusive: true
            items:
              - name: tidb
                spec:
                  memory: 32GB
                  cores: 16
                  machine: m1
              - name: pd
                spec:
                  memory: 8GB
                  cores: 2
                  machine: m1
              - name: tikv-1
                spec:
                  memory: 32GB
                  cores: 16
                  disks:
                    disk1:
                      kind: nvme
                      mountPath: /disk1
                  machine: m1
              - name: workload
                spec:
                  memory: 8GB
                  cores: 4
                  machine: m1
    - name: create-cluster
      inputs:
        parameters:
        - name: release-branch
        - name: tidb-url
        - name: tikv-url
        - name: pd-url
      resource:
        action: create
        successCondition: status.state = ready
        manifest: |
          apiVersion: naglfar.pingcap.com/v1
          kind: TestClusterTopology
          metadata:
            name: tidb-cluster
            namespace: {{workflow.name}}
          spec:
            resourceRequest: tidb-cluster
            tidbCluster:
              serverConfigs:
                tidb: |-
                tikv: |-
                pd: |-
              version:
                version: {{inputs.parameters.release-branch}}
                tidbDownloadURL: {{inputs.parameters.tidb-url}}
                tikvDownloadURL: {{inputs.parameters.tikv-url}}
                pdDownloadURL: {{inputs.parameters.pd-url}}
              control: tidb
              tikv:
                - host: tikv-1
                  port: 20160
                  statusPort: 20180
                  deployDir: /disk1/deploy/tikv-20160
                  dataDir: /disk1/data/tikv-20160
                  logDir: /disk1/deploy/tikv-20160/log
              tidb:
                - host: tidb
                  deployDir: /disk1/deploy/tidb-4000
              pd:
                - host: pd
                  deployDir: /disk1/deploy/pd-2379
                  dataDir: /disk1/data/pd-2379
                  logDir: /disk1/deploy/pd-2379/log
              monitor:
                - host: tidb
                  deployDir: /disk1/deploy/prometheus-8249
                  dataDir: /disk1/deploy/prometheus-8249/data
              grafana:
                - host: tidb
                  deployDir: /disk1/deploy/grafana-3000
    - name: uninstall-cluster
      resource:
        action: delete
        manifest: |
          apiVersion: naglfar.pingcap.com/v1
          kind: TestClusterTopology
          metadata:
            name: tidb-cluster
            namespace: {{workflow.name}}
    - name: importing
      resource:
        action: create
        successCondition: status.state = finish
        manifest: |
          apiVersion: naglfar.pingcap.com/v1
          kind: TestWorkload
          metadata:
            name: sysbench-importing
            namespace: {{workflow.name}}
          spec:
            clusterTopologies:
              - name: tidb-cluster
                aliasName: cluster
            workloads:
              - name: sysbench-importing
                dockerContainer:
                  resourceRequest:
                    name: tidb-cluster
                    node: workload
                  image: "hub.pingcap.net/mahjonp/bench-toolset"
                  imagePullPolicy: IfNotPresent
                  command:
                    - /bin/sh
                    - -c
                    - |
                      set -ex
                      export AWS_ACCESS_KEY_ID=YOURACCESSKEY AWS_SECRET_ACCESS_KEY=YOURSECRETKEY
                      tidb=`echo $cluster_tidb0 | awk -F ":" '{print $1}'`
                      sysbench oltp_point_select prepare \
                                    --mysql-host=$tidb \
                                    --mysql-port=4000 \
                                    --mysql-user=root \
                                    --db-driver=mysql \
                                    --tables=10 \
                                    --table-size=10000000 \
                                    --mysql-db=test \
                                    --threads=10
    - name: benching
      resource:
        action: create
        successCondition: status.state = finish
        manifest: |
          apiVersion: naglfar.pingcap.com/v1
          kind: TestWorkload
          metadata:
            name: sysbench-benching
            namespace: {{workflow.name}}
          spec:
            clusterTopologies:
              - name: tidb-cluster
                aliasName: cluster
            workloads:
              - name: sysbench-benching
                dockerContainer:
                  resourceRequest:
                    name: tidb-cluster
                    node: workload
                  image: "hub.pingcap.net/mahjonp/bench-toolset"
                  imagePullPolicy: IfNotPresent
                  command:
                    - /bin/sh
                    - -c
                    - |
                      set -ex
                      tidb=`echo $cluster_tidb0 | awk -F ":" '{print $1}'`
                      sysbench {{workflow.parameters.oltp_method}} run \
                                    --mysql-host=$tidb \
                                    --mysql-port=4000 \
                                    --mysql-user=root \
                                    --db-driver=mysql \
                                    --tables=10 \
                                    --table-size=10000000 \
                                    --mysql-db=test \
                                    --threads=100 \
                                    --time=600 --report-interval=10
    - name: workload-deletion
      inputs:
        parameters:
          - name: workload_name
      resource:
        action: delete
        manifest: |
          apiVersion: naglfar.pingcap.com/v1
          kind: TestWorkload
          metadata:
            name: {{inputs.parameters.workload_name}}
            namespace: {{workflow.name}}
    - name: create-ns
      resource:
        action: create
        successCondition: status.phase = Active
        manifest: |
          apiVersion: v1
          kind: Namespace
          metadata:
            name: {{workflow.name}}
    - name: delete-ns
      resource:
        action: delete
        manifest: |
          apiVersion: v1
          kind: Namespace
          metadata:
            name: {{workflow.name}}
